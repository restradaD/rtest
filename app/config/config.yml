imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: parameters.php }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # Valid locales.
    app_locales: en|es
    # Locales available to show translatable resources with lexik translation bundle.
    app_lexik_locales:
        - 'es'
        - 'en'
    # Default app locale
    locale: es
    # Folders to create after installation process.
    web_folders:
        - photos
    # Email list to send 5xx errors:
    error_email_list:
        - 'rene1tres@gmail.com'

framework:
    ide: 'phpstorm://open?file=%%f&line=%%l'
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - ':Components/Inspinia/Template:form_div_layout.html.twig'
        - ':Components/Inspinia/Template:vich_uploader_fields.html.twig'
    globals:
        app_name: "%app_name%"
        app_short_name: "%app_short_name%"
        app_vendor: "%app_vendor%"
        app_vendor_url: "%app_vendor_url%"
        app_email: "%app_email%"
        gcm_sender_id: "%gcm_sender_id%"
        fcm_server_key: "%fcm_server_key%"
        fcm_apikey: "%fcm_apikey%"
        fcm_auth_domain: "%fcm_auth_domain%"
        fcm_database_url: "%fcm_database_url%"
        fcm_storage_bucket: "%fcm_storage_bucket%"
        fcm_messaging_sender_id: "%fcm_messaging_sender_id%"
        fcm_scripts_version: "%fcm_scripts_version%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                enabled: true
        mappings:
            gedmo_translatable:
                type: annotation
                prefix: Gedmo\Translatable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                alias: GedmoTranslatable # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_translator:
                type: annotation
                prefix: Gedmo\Translator\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translator/Entity"
                alias: GedmoTranslator # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_loggable:
                type: annotation
                prefix: Gedmo\Loggable\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                alias: GedmoLoggable # (optional) it will default to the name set for the mapping
                is_bundle: false
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                alias: GedmoTree # (optional) it will default to the name set for the mapping
                is_bundle: false

# StofDoctrineExtension
stof_doctrine_extensions:
    default_locale: en
    translation_fallback: true
    orm:
        default:
            tree: true
            timestampable: true
            sluggable: true
            loggable: true
            softdeleteable: true
            translatable: true
            blameable: true
            uploadable: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    service:
        mailer: fos_user.mailer.twig_swift
    profile:
        form:
            type: AppBundle\Form\APP\ProfileFormType
    change_password:
        form:
            type: AppBundle\Form\APP\ChangePasswordFormType
    from_email:
        address:        '%mailer_user%'
        sender_name:    '%app_name%'
    registration:
        confirmation:
            enabled: true

doctrine_migrations:
    dir_name: "%kernel.root_dir%/migrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: '%app_name% Migrations'

lexik_translation:
    fallback_locale: [es]
    managed_locales: '%app_lexik_locales%'

nelmio_api_doc:
    name: '%app_name% API Documentation'
    cache:
        enabled: false
        file:    '%kernel.cache_dir%/api-doc.cache'
    motd:
        template: 'NelmioApiDocBundle::Components/motd.html.twig'
    sandbox:
        body_format:
            formats:
                - json
            default_format:       "json"
        authentication:
            name: apikey
            delivery: header

knp_menu:
    twig:
        template: :Components/Inspinia/Template:menu.html.twig
    templating: false
    default_renderer: twig

fos_rest:
    param_fetcher_listener: true
    body_listener:
        decoders:
            json: fos_rest.decoder.jsontoform
    format_listener: true
    view:
        formats:
            rss: false
            xml: true
            json: true
        templating_formats:
            html: false
        view_response_listener: 'force'
        empty_content: 204
        failed_validation: HTTP_BAD_REQUEST
    serializer:
        groups:               ['Default']
        serialize_null:       true
    versioning: true
    disable_csrf_role: ROLE_API

jms_serializer:
    metadata:
        directories:
            FOSUserBundle:
                path: "%kernel.root_dir%/Resources/FOSUserBundle/serializer"
                namespace_prefix: "FOS\\UserBundle"

vich_uploader:
    db_driver: orm
    mappings:
        profile_picture:
            uri_prefix: /photos/profile
            upload_destination: "%kernel.root_dir%/../web/photos/profile"
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
            namer:              vich_uploader.namer_uniqid

        company_logo:
            uri_prefix: /photos/company
            upload_destination: "%kernel.root_dir%/../web/photos/company"
            inject_on_load:     true
            delete_on_update:   true
            delete_on_remove:   true
            namer:              vich_uploader.namer_uniqid

liip_imagine :
    resolvers :
        default :
            web_path :
                web_root: "%kernel.root_dir%/../web"
                cache_prefix: /photos/cache

    filter_sets :
        cache : ~
        150x150 :
            quality : 80
            filters :
                thumbnail  : { size : [150, 150], mode : outbound }
                background : { size : [150, 150], position : center, color : '#000000' }

        300x300 :
            quality : 80
            filters :
                thumbnail  : { size : [300, 300], mode : outbound }
                background : { size : [300, 300], position : center, color : '#000000' }

        800x600 :
            quality : 80
            filters :
                thumbnail  : { size : [800, 600], mode : outbound }
                background : { size : [800, 600], position : center, color : '#000000' }

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE', 'PATCH']
            max_age: 3600

salva_jshrink:
    enabled: true
    flaggedComments: true

fos_js_routing:
    cache_control:
        public: false   # can be true (public) or false (private)
        maxage: null    # integer value, e.g. 300
        smaxage: null   # integer value, e.g. 300
        expires: null   # anything that can be fed to "new \DateTime($expires)", e.g. "5 minutes"
        vary: []        # string or array, e.g. "Cookie" or [ Cookie, Accept ]